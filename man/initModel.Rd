% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/initModel.r
\name{initModel}
\alias{initModel}
\title{Create model object and generate code}
\usage{
initModel(dir = "", xlFile = "model.xlsx", funsR = "functions.r",
  funsF = "functions.f95", tables = c(vars = "vars", pars = "pars", funs =
  "funs", pros = "pros", stoi = "stoi"), colsep = ",")
}
\arguments{
\item{dir}{Directory where input files are located. This value is added as a
prefix to any file names (i.e. \code{xlFile}, \code{funsR}, \code{funsF},
and possibly the values of \code{tables}).}

\item{xlFile}{Either the base name of file in MS Excel format holding
the model definition or \code{NULL}. In the latter case, the model
definition is read from delimited text files using
\code{read.table(header=TRUE, sep=colsep)} where the last argument is
under user control (see \code{colsep} below).}

\item{funsR}{Base name of file with function definitions in R.}

\item{funsF}{Base name of file with function definitions in Fortran 95.}

\item{tables}{Named vector with required elements 'vars', 'pars', 'funs',
'pros', and 'stoi'. If a file name was supplied in \code{xlFile}, the
values are interpreted as the names of worksheets holding the declaration
of variables, parameters, functions, process rates, and stoichiometry
factors, respectively. If \code{xlFile} is an empty string, the values are
interpreted as the names of delimited text files holding the respective
information.}

\item{colsep}{Specifies the column separator in text files. Only used if
  \code{xlFile} is \code{NULL}.}
}
\value{
A list with the following components.
\itemize{
  \item{\code{model} : } Object of class \code{rodeo} representing the model.
  \item{\code{dllfile} : } Shared library with compiled Fortran code.
  \item{\code{funsR} : } Full name of the file with R functions.
  \item{\code{vars} : } Data frame with variable declarations.
  \item{\code{pars} : } Data frame with parameter declarations.
}
}
\description{
Creates a model object from user inputs and builds a shared library
from generated Fortran code.
}
\note{
Files in MS Excel format can also be created/edited with free software
  such as, e.g., LibreOffice Calc.

  Spreadsheets are typically more convenient to edit as compared to
  delimited text files. However, with text files it is easier to track the
  history of a model using version control software and/or diff tools.
}
\author{
David Kneis \email{david.kneis@tu-dresden.de}
}

